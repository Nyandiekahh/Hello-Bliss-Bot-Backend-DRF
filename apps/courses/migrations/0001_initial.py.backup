# Generated by Django 4.2.7 on 2025-08-07 02:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'course_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.TextField(blank=True, max_length=500)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('duration', models.CharField(max_length=50)),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='courses/thumbnails/')),
                ('thumbnail_url', models.URLField(blank=True, null=True)),
                ('video_preview', models.URLField(blank=True, null=True)),
                ('rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('students_count', models.IntegerField(default=0)),
                ('total_duration_minutes', models.IntegerField(default=0)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learning_objectives', models.JSONField(blank=True, default=list)),
                ('prerequisites', models.JSONField(blank=True, default=list)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.category')),
                ('teacher', models.ForeignKey(limit_choices_to={'role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'courses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('refunded', 'Refunded')], default='enrolled', max_length=20)),
                ('progress_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('enrolled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('certificate_url', models.URLField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_enrollments',
                'ordering': ['-enrolled_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('video', 'Video'), ('simulation', 'Simulation'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('reading', 'Reading Material')], max_length=20)),
                ('duration', models.IntegerField(help_text='Duration in minutes')),
                ('order', models.IntegerField()),
                ('content', models.JSONField(blank=True, default=dict)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('resources', models.JSONField(blank=True, default=list)),
                ('is_preview', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course')),
            ],
            options={
                'db_table': 'course_modules',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('score', models.FloatField(blank=True, null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('progress_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(default=django.utils.timezone.now)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_progress', to='courses.courseenrollment')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.coursemodule')),
            ],
            options={
                'db_table': 'module_progress',
                'ordering': ['-last_accessed'],
                'indexes': [models.Index(fields=['enrollment', 'completed'], name='module_prog_enrollm_94358c_idx')],
                'unique_together': {('enrollment', 'module')},
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True)),
                ('helpful_votes', models.IntegerField(default=0)),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='courses.course')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_reviews',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['course', '-created_at'], name='course_revi_course__16a41f_idx'), models.Index(fields=['rating'], name='course_revi_rating_0836d5_idx')],
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.AddIndex(
            model_name='coursemodule',
            index=models.Index(fields=['course', 'order'], name='course_modu_course__2c6358_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='coursemodule',
            unique_together={('course', 'order')},
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['student', 'status'], name='course_enro_student_8023bd_idx'),
        ),
        migrations.AddIndex(
            model_name='courseenrollment',
            index=models.Index(fields=['course', 'status'], name='course_enro_course__37db5f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('student', 'course')},
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['status', '-published_at'], name='courses_status_4eb087_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['category', 'level'], name='courses_categor_3e7c1b_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['teacher', 'status'], name='courses_teacher_e56881_idx'),
        ),
    ]
